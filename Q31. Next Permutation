import math
class Solution:
    def reverseList(self, nums, i):
        j = i + 1
        k = len(nums) - 1
        while j < k:
            temp = nums[j]
            nums[j] = nums[k]
            nums[k] = temp
            j += 1
            k -= 1
        return
    
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        found = False
        i = len(nums) - 2
        while i >= 0:
            next_larger = math.inf
            next_larger_index = -1
            j = i + 1
            # find the smaller number that's larger than i after i
            while j < len(nums):
                if nums[j] > nums[i] and nums[j] <= next_larger:
                    found = True
                    next_larger = nums[j]
                    next_larger_index = j
                j += 1
            if found:
                # switch digit i with the next larger digit after it
                temp = nums[i]
                nums[i] = nums[next_larger_index]
                nums[next_larger_index] = temp
                # reverse digits after i
                self.reverseList(nums, i)
                return
            i -= 1
        if not found:
            self.reverseList(nums, -1)
        return                
