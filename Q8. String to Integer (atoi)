class Solution:
    def myAtoi(self, s: str) -> int:
        if len(s) == 0:
            return 0
        # delete all whitespace
        i = 0
        while i < len(s) and s[i] == ' ':
            i += 1
        
        if i == len(s):
            return 0
        s = s[i:]
        signs = {'-','+'}
        numericals = {'0','1','2','3','4','5','6','7','8','9'}
        digits = []
        negate = False
        if s[0] in signs:
            if len(s) == 1: 
                return 0
            if s[1] not in numericals:
                return 0
            if s[0] == '-':
                negate = True
        else:
            if s[0] not in numericals:
                return 0
            else:
                digits.append(s[0])
        if len(s) > 1:
            for char in s[1:]:
                if char not in numericals:
                    break
                digits.append(int(char))
        # convert string to int
        num = 0
        for digit in digits:
            if negate:
                if (num > (2 ** 31) // 10) or ((num == (2 ** 31) // 10) and digit > 8):
                    return -1 * (2 ** 31)
            else:
                if (num > (2 ** 31) // 10) or ((num == (2 ** 31) // 10) and digit > 7):
                    return (2 ** 31) - 1
            num = num * 10 + int(digit)
        if negate:
            return -1 * num
        else:
            return num
