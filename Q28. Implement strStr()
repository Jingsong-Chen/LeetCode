class Solution:
    def generateMap(self, needle):
        pre = [0] * len(needle)
        left = 0
        for right in range(1, len(needle)):
            while left > 0 and needle[right] != needle[left]:
                left = pre[left-1]
            if needle[right] == needle[left]:
                left += 1
                pre[right] = left
        return [0] + pre
    
    def strStr(self, haystack: str, needle: str) -> int:
        if not len(needle):
            return 0
        mapping = self.generateMap(needle)
        print(mapping)
        i, j = 0, 0
        while i < len(haystack):
            print('i, j', (i,j))
            while j > 0 and haystack[i] != needle[j]:
                j = mapping[j]
            if haystack[i] == needle[j]:
                if j == len(needle) - 1:
                    return i - len(needle) + 1
                j += 1
            i += 1
        return -1
